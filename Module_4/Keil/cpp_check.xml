<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.6"/>
    <errors>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;x&amp;lt;0&amp;#039; is always false" verbose="Condition &amp;#039;x&amp;lt;0&amp;#039; is always false" cwe="570" file0="mbed-dsp/cmsis_dsp/FastMathFunctions/arm_cos_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FastMathFunctions\arm_cos_q15.c" line="72" info="Condition &amp;#039;x&amp;lt;0&amp;#039; is always false"/>
            <location file="mbed-dsp\cmsis_dsp\FastMathFunctions\arm_cos_q15.c" line="71" info="Assignment &amp;#039;x=(uint16_t)x+0x2000&amp;#039;, assigned value is greater than 8191"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;x&amp;lt;0&amp;#039; is always false" verbose="Condition &amp;#039;x&amp;lt;0&amp;#039; is always false" cwe="570" file0="mbed-dsp/cmsis_dsp/FastMathFunctions/arm_cos_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FastMathFunctions\arm_cos_q31.c" line="72" info="Condition &amp;#039;x&amp;lt;0&amp;#039; is always false"/>
            <location file="mbed-dsp\cmsis_dsp\FastMathFunctions\arm_cos_q31.c" line="71" info="Assignment &amp;#039;x=(uint32_t)x+0x20000000&amp;#039;, assigned value is greater than 536870911"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;sample&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;sample&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_biquad_cascade_df1_fast_q31.c" line="92"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;sample&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;sample&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_biquad_cascade_df1_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_biquad_cascade_df1_q15.c" line="326"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;j&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;j&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_f32.c" line="145"/>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &amp;#039;pScr1&amp;#039;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &amp;#039;pScr1&amp;#039;. The initialized value is overwritten before it is read." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_fast_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_fast_opt_q15.c" line="174" info="pScr1 is overwritten"/>
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_fast_opt_q15.c" line="96" info="pScr1 is initialized"/>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &amp;#039;pScr2&amp;#039;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &amp;#039;pScr2&amp;#039;. The initialized value is overwritten before it is read." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_fast_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_fast_opt_q15.c" line="136" info="pScr2 is overwritten"/>
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_fast_opt_q15.c" line="97" info="pScr2 is initialized"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;px&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;px&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_fast_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_fast_q15.c" line="467" info="px is overwritten"/>
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_fast_q15.c" line="441" info="px is assigned"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;px&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;px&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_fast_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_fast_q15.c" line="1190" info="px is overwritten"/>
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_fast_q15.c" line="1171" info="px is assigned"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;j&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;j&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_fast_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_fast_q31.c" line="94"/>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &amp;#039;pScr1&amp;#039;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &amp;#039;pScr1&amp;#039;. The initialized value is overwritten before it is read." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_opt_q15.c" line="176" info="pScr1 is overwritten"/>
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_opt_q15.c" line="98" info="pScr1 is initialized"/>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &amp;#039;pScr2&amp;#039;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &amp;#039;pScr2&amp;#039;. The initialized value is overwritten before it is read." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_opt_q15.c" line="139" info="pScr2 is overwritten"/>
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_opt_q15.c" line="99" info="pScr2 is initialized"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pIn2&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pIn2&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_opt_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_opt_q7.c" line="257"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_f32.c" line="113"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;py&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;py&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_f32.c" line="114"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;j&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;j&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_f32.c" line="118"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;k&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;k&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_f32.c" line="118"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;count&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;count&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_f32.c" line="118"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;blkCnt&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;blkCnt&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_f32.c" line="118"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;check&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;check&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_f32.c" line="118"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;blockSize1&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;blockSize1&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_f32.c" line="119"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;blockSize2&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;blockSize2&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_f32.c" line="119"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;blockSize3&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;blockSize3&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_f32.c" line="119"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pIn1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pIn1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_f32.c" line="110"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pIn2&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pIn2&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_f32.c" line="111"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_f32.c" line="112"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;count&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;count&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_f32.c" line="118"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;i&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;i&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_f32.c" line="628"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;j&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;j&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_f32.c" line="628"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_opt_q15.c" line="87"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pScr1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pScr1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_opt_q15.c" line="88"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pScr2&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pScr2&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_opt_q15.c" line="89"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;pIn1&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;pIn1&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_opt_q15.c" line="419"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_opt_q15.c" line="421"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;j&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;j&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_opt_q15.c" line="423"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;k&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;k&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_opt_q15.c" line="423"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;blkCnt&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;blkCnt&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_opt_q15.c" line="423"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;tapCnt&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;tapCnt&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_opt_q15.c" line="425"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_opt_q15.c" line="415"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pScr1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pScr1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_opt_q15.c" line="416"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pScr2&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pScr2&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_opt_q15.c" line="417"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;px&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;px&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_q15.c" line="488" info="px is overwritten"/>
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_q15.c" line="462" info="px is assigned"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_q15.c" line="80"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;px&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;px&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_q15.c" line="1256" info="px is overwritten"/>
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_q15.c" line="1237" info="px is assigned"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_q15.c" line="726"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_q31.c" line="79"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;py&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;py&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_q31.c" line="80"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;j&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;j&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_q31.c" line="84"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;k&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;k&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_q31.c" line="84"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;count&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;count&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_q31.c" line="84"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;check&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;check&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_q31.c" line="84"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;blkCnt&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;blkCnt&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_q31.c" line="84"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;blockSize1&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;blockSize1&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_q31.c" line="85"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;blockSize2&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;blockSize2&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_q31.c" line="85"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;blockSize3&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;blockSize3&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_q31.c" line="85"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_fast_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_fast_q31.c" line="78"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q15.c" line="88"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pScr1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pScr1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q15.c" line="89"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pScr2&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pScr2&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q15.c" line="90"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;pIn1&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;pIn1&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q15.c" line="413"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q15.c" line="415"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;j&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;j&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q15.c" line="417"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;k&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;k&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q15.c" line="417"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;blkCnt&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;blkCnt&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q15.c" line="417"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;tapCnt&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;tapCnt&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q15.c" line="419"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q15.c" line="409"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pScr1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pScr1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q15.c" line="410"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pScr2&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pScr2&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q15.c" line="411"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q7.c" line="97"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pIn2&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pIn2&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q7.c" line="231"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;pScr2&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;pScr2&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q7.c" line="438"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;pScr1&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;pScr1&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q7.c" line="438"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;pIn1&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;pIn1&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q7.c" line="440"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;j&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;j&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q7.c" line="441"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;k&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;k&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q7.c" line="441"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;blkCnt&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;blkCnt&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q7.c" line="441"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;tapCnt&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;tapCnt&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q7.c" line="441"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q7.c" line="442"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q7.c" line="446"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pIn2&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pIn2&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_opt_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_opt_q7.c" line="605"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;i&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;i&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q15.c" line="744"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;j&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;j&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q15.c" line="744"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q31.c" line="84"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;py&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;py&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q31.c" line="85"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;j&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;j&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q31.c" line="89"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;k&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;k&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q31.c" line="89"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;count&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;count&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q31.c" line="89"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;check&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;check&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q31.c" line="89"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;blkCnt&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;blkCnt&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q31.c" line="89"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;blockSize1&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;blockSize1&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q31.c" line="90"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;blockSize2&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;blockSize2&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q31.c" line="90"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;blockSize3&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;blockSize3&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q31.c" line="90"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q31.c" line="83"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;i&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;i&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q31.c" line="565"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;j&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;j&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q31.c" line="565"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q7.c" line="86"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;py&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;py&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q7.c" line="87"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;j&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;j&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q7.c" line="93"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;k&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;k&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q7.c" line="93"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;count&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;count&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q7.c" line="93"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;check&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;check&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q7.c" line="93"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;blkCnt&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;blkCnt&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q7.c" line="93"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;blockSize1&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;blockSize1&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q7.c" line="94"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;blockSize2&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;blockSize2&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q7.c" line="94"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;blockSize3&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;blockSize3&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q7.c" line="94"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q7.c" line="85"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;i&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;i&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q7.c" line="699"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;j&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;j&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_partial_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_partial_q7.c" line="699"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;j&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;j&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_q31.c" line="100"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;j&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;j&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_conv_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_conv_q7.c" line="99"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;outBlockSize&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;outBlockSize&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_correlate_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_correlate_f32.c" line="137"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;k&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;k&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_correlate_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_correlate_f32.c" line="137"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;px&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;px&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_correlate_fast_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_correlate_fast_q15.c" line="449" info="px is overwritten"/>
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_correlate_fast_q15.c" line="422" info="px is assigned"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;k&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;k&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_correlate_fast_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_correlate_fast_q15.c" line="94"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;px&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;px&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_correlate_fast_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_correlate_fast_q15.c" line="1133" info="px is overwritten"/>
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_correlate_fast_q15.c" line="1106" info="px is assigned"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;k&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;k&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_correlate_fast_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_correlate_fast_q15.c" line="639"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;outBlockSize&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;outBlockSize&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_correlate_fast_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_correlate_fast_q31.c" line="96"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;k&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;k&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_correlate_fast_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_correlate_fast_q31.c" line="96"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;outBlockSize&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;outBlockSize&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_correlate_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_correlate_q31.c" line="98"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;k&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;k&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_correlate_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_correlate_q31.c" line="98"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;outBlockSize&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;outBlockSize&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_correlate_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_correlate_q7.c" line="99"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;k&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;k&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_correlate_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_correlate_q7.c" line="99"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px0&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px0&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_decimate_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_decimate_f32.c" line="159"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px1&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px1&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_decimate_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_decimate_f32.c" line="159"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px2&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px2&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_decimate_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_decimate_f32.c" line="159"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px3&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px3&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_decimate_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_decimate_f32.c" line="159"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_decimate_fast_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_decimate_fast_q15.c" line="89"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px0&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px0&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_decimate_fast_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_decimate_fast_q15.c" line="94"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px1&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px1&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_decimate_fast_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_decimate_fast_q15.c" line="94"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_decimate_fast_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_decimate_fast_q15.c" line="329"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px0&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px0&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_decimate_fast_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_decimate_fast_q15.c" line="334"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px1&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px1&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_decimate_fast_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_decimate_fast_q15.c" line="334"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_decimate_fast_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_decimate_fast_q31.c" line="86"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px0&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px0&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_decimate_fast_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_decimate_fast_q31.c" line="94"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px1&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px1&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_decimate_fast_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_decimate_fast_q31.c" line="94"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_decimate_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_decimate_q15.c" line="86"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px0&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px0&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_decimate_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_decimate_q15.c" line="91"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px1&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px1&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_decimate_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_decimate_q15.c" line="91"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_decimate_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_decimate_q15.c" line="604"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;pb&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;pb&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_decimate_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_decimate_q15.c" line="605"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;tapCnt&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;tapCnt&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_decimate_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_decimate_q15.c" line="609"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_decimate_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_decimate_q15.c" line="326"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px0&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px0&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_decimate_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_decimate_q15.c" line="331"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px1&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px1&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_decimate_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_decimate_q15.c" line="331"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;i&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;i&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_f32.c" line="578"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_f32.c" line="491"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;pb&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;pb&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_f32.c" line="491"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;i&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;i&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_f32.c" line="493"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;i&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;i&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_f32.c" line="149"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;i&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;i&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_interpolate_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_interpolate_f32.c" line="495"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;i&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;i&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_interpolate_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_interpolate_q31.c" line="414"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;gcurr1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;gcurr1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_lattice_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_lattice_f32.c" line="154"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;stageCnt&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;stageCnt&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_lattice_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_lattice_f32.c" line="435"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;gcurnt1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;gcurnt1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_lattice_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_lattice_q15.c" line="78"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;stageCnt&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;stageCnt&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_lattice_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_lattice_q15.c" line="456"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;gcurr1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;gcurr1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_lattice_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_lattice_q31.c" line="80"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_lattice_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_lattice_q31.c" line="278"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;pk&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;pk&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_lattice_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_lattice_q31.c" line="279"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;stageCnt&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;stageCnt&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_lattice_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_lattice_q31.c" line="282"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_q15.c" line="615"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;pb&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;pb&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_q15.c" line="616"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_q31.c" line="291"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;pb&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;pb&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_q31.c" line="292"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;i&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;i&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_q31.c" line="295"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_q7.c" line="325"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;pb&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;pb&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_q7.c" line="325"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;acc&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;acc&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_q7.c" line="326"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;tapCnt&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;tapCnt&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_sparse_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_sparse_q15.c" line="172" info="tapCnt is overwritten"/>
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_sparse_q15.c" line="105" info="tapCnt is assigned"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;tapCnt&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;tapCnt&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_sparse_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_sparse_q15.c" line="393" info="tapCnt is overwritten"/>
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_sparse_q15.c" line="344" info="tapCnt is assigned"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;tapCnt&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;tapCnt&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_sparse_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_sparse_q7.c" line="177" info="tapCnt is overwritten"/>
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_sparse_q7.c" line="110" info="tapCnt is assigned"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;tapCnt&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;tapCnt&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_fir_sparse_q7.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_sparse_q7.c" line="385" info="tapCnt is overwritten"/>
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_fir_sparse_q7.c" line="335" info="tapCnt is assigned"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px1&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px1&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_iir_lattice_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_iir_lattice_f32.c" line="143"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px2&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px2&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_iir_lattice_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_iir_lattice_f32.c" line="143"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;pk&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;pk&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_iir_lattice_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_iir_lattice_f32.c" line="143"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;pv&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;pv&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_iir_lattice_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_iir_lattice_f32.c" line="143"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px1&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px1&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_iir_lattice_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_iir_lattice_f32.c" line="357"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px2&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px2&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_iir_lattice_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_iir_lattice_f32.c" line="357"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;pk&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;pk&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_iir_lattice_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_iir_lattice_f32.c" line="357"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;pv&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;pv&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_iir_lattice_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_iir_lattice_f32.c" line="357"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;gcurr&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;gcurr&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_iir_lattice_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_iir_lattice_q15.c" line="83"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;tapCnt&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;tapCnt&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_iir_lattice_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_iir_lattice_q15.c" line="370"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px1&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px1&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_iir_lattice_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_iir_lattice_q15.c" line="371"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;px2&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;px2&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_iir_lattice_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_iir_lattice_q15.c" line="371"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;pk&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;pk&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_iir_lattice_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_iir_lattice_q15.c" line="371"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;pv&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;pv&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_iir_lattice_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_iir_lattice_q15.c" line="371"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;gcurr&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;gcurr&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_iir_lattice_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_iir_lattice_q15.c" line="367"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;fnext&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;fnext&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_iir_lattice_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_iir_lattice_q31.c" line="76"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;gcurr&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;gcurr&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_iir_lattice_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_iir_lattice_q31.c" line="76"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;w&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;w&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_lms_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_lms_f32.c" line="197"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;e&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;e&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_lms_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_lms_f32.c" line="199"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;d&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;d&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_lms_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_lms_f32.c" line="200"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;e&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;e&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_lms_norm_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_lms_norm_f32.c" line="193"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;d&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;d&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_lms_norm_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_lms_norm_f32.c" line="194"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;w&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;w&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_lms_norm_f32.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_lms_norm_f32.c" line="195"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;e&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;e&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_lms_norm_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_lms_norm_q15.c" line="96"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;d&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;d&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_lms_norm_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_lms_norm_q15.c" line="96"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;w&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;w&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_lms_norm_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_lms_norm_q15.c" line="97"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;e&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;e&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_lms_norm_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_lms_norm_q31.c" line="97"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;d&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;d&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_lms_norm_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_lms_norm_q31.c" line="97"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;w&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;w&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_lms_norm_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_lms_norm_q31.c" line="98"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;e&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;e&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_lms_q15.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_lms_q15.c" line="91"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;e&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;e&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/FilteringFunctions/arm_lms_q31.c">
            <location file="mbed-dsp\cmsis_dsp\FilteringFunctions\arm_lms_q31.c" line="94"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pIn1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pIn1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/MatrixFunctions/arm_mat_cmplx_mult_f32.c">
            <location file="mbed-dsp\cmsis_dsp\MatrixFunctions\arm_mat_cmplx_mult_f32.c" line="78"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pIn2&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pIn2&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/MatrixFunctions/arm_mat_cmplx_mult_f32.c">
            <location file="mbed-dsp\cmsis_dsp\MatrixFunctions\arm_mat_cmplx_mult_f32.c" line="79"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pInA&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pInA&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/MatrixFunctions/arm_mat_cmplx_mult_q15.c">
            <location file="mbed-dsp\cmsis_dsp\MatrixFunctions\arm_mat_cmplx_mult_q15.c" line="96"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pIn1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pIn1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/MatrixFunctions/arm_mat_cmplx_mult_q31.c">
            <location file="mbed-dsp\cmsis_dsp\MatrixFunctions\arm_mat_cmplx_mult_q31.c" line="80"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pIn2&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pIn2&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/MatrixFunctions/arm_mat_cmplx_mult_q31.c">
            <location file="mbed-dsp\cmsis_dsp\MatrixFunctions\arm_mat_cmplx_mult_q31.c" line="81"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pIn1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pIn1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/MatrixFunctions/arm_mat_mult_f32.c">
            <location file="mbed-dsp\cmsis_dsp\MatrixFunctions\arm_mat_mult_f32.c" line="83"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pIn2&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pIn2&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/MatrixFunctions/arm_mat_mult_f32.c">
            <location file="mbed-dsp\cmsis_dsp\MatrixFunctions\arm_mat_mult_f32.c" line="84"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pInA&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pInA&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/MatrixFunctions/arm_mat_mult_fast_q15.c">
            <location file="mbed-dsp\cmsis_dsp\MatrixFunctions\arm_mat_mult_fast_q15.c" line="93"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pIn1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pIn1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/MatrixFunctions/arm_mat_mult_fast_q31.c">
            <location file="mbed-dsp\cmsis_dsp\MatrixFunctions\arm_mat_mult_fast_q31.c" line="88"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pIn2&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pIn2&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/MatrixFunctions/arm_mat_mult_fast_q31.c">
            <location file="mbed-dsp\cmsis_dsp\MatrixFunctions\arm_mat_mult_fast_q31.c" line="89"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pInA&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pInA&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/MatrixFunctions/arm_mat_mult_q15.c">
            <location file="mbed-dsp\cmsis_dsp\MatrixFunctions\arm_mat_mult_q15.c" line="92"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pIn1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pIn1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/MatrixFunctions/arm_mat_mult_q15.c">
            <location file="mbed-dsp\cmsis_dsp\MatrixFunctions\arm_mat_mult_q15.c" line="374"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pIn2&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pIn2&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/MatrixFunctions/arm_mat_mult_q15.c">
            <location file="mbed-dsp\cmsis_dsp\MatrixFunctions\arm_mat_mult_q15.c" line="375"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pIn1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pIn1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/MatrixFunctions/arm_mat_mult_q31.c">
            <location file="mbed-dsp\cmsis_dsp\MatrixFunctions\arm_mat_mult_q31.c" line="83"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pIn2&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pIn2&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/MatrixFunctions/arm_mat_mult_q31.c">
            <location file="mbed-dsp\cmsis_dsp\MatrixFunctions\arm_mat_mult_q31.c" line="84"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;inA1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;inA1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/MatrixFunctions/arm_mat_scale_q15.c">
            <location file="mbed-dsp\cmsis_dsp\MatrixFunctions\arm_mat_scale_q15.c" line="127"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;inA2&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;inA2&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/MatrixFunctions/arm_mat_scale_q15.c">
            <location file="mbed-dsp\cmsis_dsp\MatrixFunctions\arm_mat_scale_q15.c" line="129"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;pOut&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/MatrixFunctions/arm_mat_trans_q15.c">
            <location file="mbed-dsp\cmsis_dsp\MatrixFunctions\arm_mat_trans_q15.c" line="65"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed int * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed int * is not portable due to different binary data representations on different platforms." cwe="704" file0="mbed-dsp/cmsis_dsp/SupportFunctions/math_helper.c">
            <location file="mbed-dsp\cmsis_dsp\SupportFunctions\math_helper.c" line="73"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed int * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed int * is not portable due to different binary data representations on different platforms." cwe="704" file0="mbed-dsp/cmsis_dsp/SupportFunctions/math_helper.c">
            <location file="mbed-dsp\cmsis_dsp\SupportFunctions\math_helper.c" line="82"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed int * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed int * is not portable due to different binary data representations on different platforms." cwe="704" file0="mbed-dsp/cmsis_dsp/SupportFunctions/math_helper.c">
            <location file="mbed-dsp\cmsis_dsp\SupportFunctions\math_helper.c" line="94"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;diff&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;diff&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/SupportFunctions/math_helper.c">
            <location file="mbed-dsp\cmsis_dsp\SupportFunctions\math_helper.c" line="167"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;diffCrnt&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;diffCrnt&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/SupportFunctions/math_helper.c">
            <location file="mbed-dsp\cmsis_dsp\SupportFunctions\math_helper.c" line="167"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;diff&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;diff&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/SupportFunctions/math_helper.c">
            <location file="mbed-dsp\cmsis_dsp\SupportFunctions\math_helper.c" line="195"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;diffCrnt&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;diffCrnt&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/SupportFunctions/math_helper.c">
            <location file="mbed-dsp\cmsis_dsp\SupportFunctions\math_helper.c" line="195"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;pIn&amp;#039; can be declared with const" verbose="Parameter &amp;#039;pIn&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/SupportFunctions/math_helper.c">
            <location file="mbed-dsp\cmsis_dsp\SupportFunctions\math_helper.c" line="358"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;pIn&amp;#039; can be declared with const" verbose="Parameter &amp;#039;pIn&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/SupportFunctions/math_helper.c">
            <location file="mbed-dsp\cmsis_dsp\SupportFunctions\math_helper.c" line="384"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;pIn&amp;#039; can be declared with const" verbose="Parameter &amp;#039;pIn&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/SupportFunctions/math_helper.c">
            <location file="mbed-dsp\cmsis_dsp\SupportFunctions\math_helper.c" line="411"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;pIn&amp;#039; can be declared with const" verbose="Parameter &amp;#039;pIn&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/SupportFunctions/math_helper.c">
            <location file="mbed-dsp\cmsis_dsp\SupportFunctions\math_helper.c" line="164"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;pOut&amp;#039; can be declared with const" verbose="Parameter &amp;#039;pOut&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/SupportFunctions/math_helper.c">
            <location file="mbed-dsp\cmsis_dsp\SupportFunctions\math_helper.c" line="192"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;pIn&amp;#039; can be declared with const" verbose="Parameter &amp;#039;pIn&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/SupportFunctions/math_helper.c">
            <location file="mbed-dsp\cmsis_dsp\SupportFunctions\math_helper.c" line="192"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;pOut&amp;#039; can be declared with const" verbose="Parameter &amp;#039;pOut&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/SupportFunctions/math_helper.c">
            <location file="mbed-dsp\cmsis_dsp\SupportFunctions\math_helper.c" line="164"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;pIn&amp;#039; can be declared with const" verbose="Parameter &amp;#039;pIn&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/SupportFunctions/math_helper.c">
            <location file="mbed-dsp\cmsis_dsp\SupportFunctions\math_helper.c" line="138"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;pIn&amp;#039; can be declared with const" verbose="Parameter &amp;#039;pIn&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/SupportFunctions/math_helper.c">
            <location file="mbed-dsp\cmsis_dsp\SupportFunctions\math_helper.c" line="329"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;diffCrnt&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;diffCrnt&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/SupportFunctions/math_helper.c">
            <location file="mbed-dsp\cmsis_dsp\SupportFunctions\math_helper.c" line="167"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;diffCrnt&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;diffCrnt&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/SupportFunctions/math_helper.c">
            <location file="mbed-dsp\cmsis_dsp\SupportFunctions\math_helper.c" line="195"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;l&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;l&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_q31.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_q31.c" line="151"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;l&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;l&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_q31.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_q31.c" line="211"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;pCoef&amp;#039; can be declared with const" verbose="Parameter &amp;#039;pCoef&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix2_f32.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_f32.c" line="299"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;pCoef&amp;#039; can be declared with const" verbose="Parameter &amp;#039;pCoef&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix2_f32.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_f32.c" line="131"/>
        </error>
        <error id="uselessAssignmentArg" severity="style" msg="Assignment of function parameter has no effect outside the function." verbose="Assignment of function parameter has no effect outside the function." cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix2_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q15.c" line="631"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;n1&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;n1&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix2_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q15.c" line="275" info="n1 is overwritten"/>
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q15.c" line="120" info="n1 is assigned"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;n1&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;n1&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix2_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q15.c" line="601" info="n1 is overwritten"/>
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q15.c" line="449" info="n1 is assigned"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;ia&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;ia&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix2_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q15.c" line="281"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;twidCoefModifier&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;twidCoefModifier&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix2_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q15.c" line="631"/>
        </error>
        <error id="uselessAssignmentArg" severity="style" msg="Assignment of function parameter has no effect outside the function." verbose="Assignment of function parameter has no effect outside the function." cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix2_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q15.c" line="425"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;pCoef&amp;#039; can be declared with const" verbose="Parameter &amp;#039;pCoef&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix2_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q15.c" line="106"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;pCoef&amp;#039; can be declared with const" verbose="Parameter &amp;#039;pCoef&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix2_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q15.c" line="435"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;cosVal&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;cosVal&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix2_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q15.c" line="402"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;sinVal&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;sinVal&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix2_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q15.c" line="403"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;twidCoefModifier&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;twidCoefModifier&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix2_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q15.c" line="425"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;cosVal&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;cosVal&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix2_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q15.c" line="718"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;sinVal&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;sinVal&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix2_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q15.c" line="719"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;ia&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;ia&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix2_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q15.c" line="721"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;n1&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;n1&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix2_q31.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q31.c" line="191" info="n1 is overwritten"/>
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q31.c" line="118" info="n1 is assigned"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;n1&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;n1&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix2_q31.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q31.c" line="314" info="n1 is overwritten"/>
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q31.c" line="246" info="n1 is assigned"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;pCoef&amp;#039; can be declared with const" verbose="Parameter &amp;#039;pCoef&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix2_q31.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q31.c" line="106"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;pCoef&amp;#039; can be declared with const" verbose="Parameter &amp;#039;pCoef&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix2_q31.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q31.c" line="234"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;ia&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;ia&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix2_q31.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q31.c" line="197"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;ia&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;ia&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix2_q31.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix2_q31.c" line="320"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;pCoef&amp;#039; can be declared with const" verbose="Parameter &amp;#039;pCoef&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix4_f32.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_f32.c" line="574"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;pCoef&amp;#039; can be declared with const" verbose="Parameter &amp;#039;pCoef&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix4_f32.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_f32.c" line="70"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;n1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;n1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix4_f32.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_f32.c" line="94"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;n1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;n1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix4_f32.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_f32.c" line="597"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;n1&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;n1&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix4_f32.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_f32.c" line="1083" info="n1 is overwritten"/>
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_f32.c" line="974" info="n1 is assigned"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &amp;#039;i0&amp;#039; is less than zero." verbose="The unsigned expression &amp;#039;i0&amp;#039; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix4_f32.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_f32.c" line="1087" info="Unsigned less than zero"/>
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_f32.c" line="974" info="Assignment &amp;#039;n1=n2&amp;#039;, assigned value is symbolic=fftLen"/>
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_f32.c" line="973" info="n2 is assigned &amp;#039;fftLen&amp;#039; here."/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;n1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;n1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix4_f32.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_f32.c" line="450"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;n1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;n1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix4_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_q15.c" line="192"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;n1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;n1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix4_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_q15.c" line="1109"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;n1&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;n1&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix4_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_q15.c" line="936" info="n1 is overwritten"/>
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_q15.c" line="640" info="n1 is assigned"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;n1&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;n1&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix4_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_q15.c" line="1836" info="n1 is overwritten"/>
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_q15.c" line="1555" info="n1 is assigned"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &amp;#039;i0&amp;#039; is less than zero." verbose="The unsigned expression &amp;#039;i0&amp;#039; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix4_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_q15.c" line="942" info="Unsigned less than zero"/>
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_q15.c" line="640" info="Assignment &amp;#039;n1=n2&amp;#039;, assigned value is symbolic=fftLen"/>
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_q15.c" line="639" info="n2 is assigned &amp;#039;fftLen&amp;#039; here."/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &amp;#039;i0&amp;#039; is less than zero." verbose="The unsigned expression &amp;#039;i0&amp;#039; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix4_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_q15.c" line="1840" info="Unsigned less than zero"/>
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_q15.c" line="1555" info="Assignment &amp;#039;n1=n2&amp;#039;, assigned value is symbolic=fftLen"/>
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_q15.c" line="1554" info="n2 is assigned &amp;#039;fftLen&amp;#039; here."/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;pCoef16&amp;#039; can be declared with const" verbose="Parameter &amp;#039;pCoef16&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix4_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_q15.c" line="166"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;pCoef16&amp;#039; can be declared with const" verbose="Parameter &amp;#039;pCoef16&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix4_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_q15.c" line="1083"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;pCoef&amp;#039; can be declared with const" verbose="Parameter &amp;#039;pCoef&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix4_q31.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_q31.c" line="822"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;pCoef&amp;#039; can be declared with const" verbose="Parameter &amp;#039;pCoef&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix4_q31.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_q31.c" line="166"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;n1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;n1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix4_q31.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_q31.c" line="431"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;n1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;n1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix4_q31.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_q31.c" line="1079"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;n1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;n1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix4_q31.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_q31.c" line="189"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;n1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;n1&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix4_q31.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix4_q31.c" line="844"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;ia1&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;ia1&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix8_f32.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix8_f32.c" line="146"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;i1&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;i1&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix8_f32.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix8_f32.c" line="147"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;n1&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;n1&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix8_f32.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix8_f32.c" line="149"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;j&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;j&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_cfft_radix8_f32.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_cfft_radix8_f32.c" line="149"/>
        </error>
        <error id="constVariable" severity="style" msg="Variable &amp;#039;pCosFactor&amp;#039; can be declared with const" verbose="Variable &amp;#039;pCosFactor&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_dct4_init_f32.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_dct4_init_f32.c" line="16467"/>
        </error>
        <error id="constVariable" severity="style" msg="Variable &amp;#039;twiddlePtr&amp;#039; can be declared with const" verbose="Variable &amp;#039;twiddlePtr&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_dct4_init_f32.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_dct4_init_f32.c" line="16461"/>
        </error>
        <error id="constVariable" severity="style" msg="Variable &amp;#039;pCosFactor&amp;#039; can be declared with const" verbose="Variable &amp;#039;pCosFactor&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_dct4_init_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_dct4_init_q15.c" line="4232"/>
        </error>
        <error id="constVariable" severity="style" msg="Variable &amp;#039;twiddlePtr&amp;#039; can be declared with const" verbose="Variable &amp;#039;twiddlePtr&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_dct4_init_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_dct4_init_q15.c" line="4227"/>
        </error>
        <error id="constVariable" severity="style" msg="Variable &amp;#039;twiddlePtr&amp;#039; can be declared with const" verbose="Variable &amp;#039;twiddlePtr&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_dct4_init_q31.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_dct4_init_q31.c" line="8307"/>
        </error>
        <error id="constVariable" severity="style" msg="Variable &amp;#039;pCosFactor&amp;#039; can be declared with const" verbose="Variable &amp;#039;pCosFactor&amp;#039; can be declared with const" cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_dct4_init_q31.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_dct4_init_q31.c" line="8312"/>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &amp;#039;pB&amp;#039;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &amp;#039;pB&amp;#039;. The initialized value is overwritten before it is read." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_rfft_fast_f32.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_rfft_fast_f32.c" line="151" info="pB is overwritten"/>
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_rfft_fast_f32.c" line="137" info="pB is initialized"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;twR&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;twR&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_rfft_fast_f32.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_rfft_fast_f32.c" line="66"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;twI&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;twI&amp;#039; is assigned a value that is never used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_rfft_fast_f32.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_rfft_fast_f32.c" line="67"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;i&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;i&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_rfft_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_rfft_q15.c" line="172" info="i is overwritten"/>
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_rfft_q15.c" line="168" info="i is assigned"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;i&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;i&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_rfft_q15.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_rfft_q15.c" line="93"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;i&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;i&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="mbed-dsp/cmsis_dsp/TransformFunctions/arm_rfft_q31.c">
            <location file="mbed-dsp\cmsis_dsp\TransformFunctions\arm_rfft_q31.c" line="93"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &amp;#039;_dx&amp;#039; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&amp;#039;t explicitly write them to the initialization list. You could avoid assigning &amp;#039;_dx&amp;#039; a value by passing the value to the constructor in the initialization list." cwe="398" file0="mbed-dsp/dsp/Sine_f32.cpp">
            <location file="mbed-dsp\dsp\Sine_f32.cpp" line="30"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &amp;#039;_amplitude&amp;#039; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&amp;#039;t explicitly write them to the initialization list. You could avoid assigning &amp;#039;_amplitude&amp;#039; a value by passing the value to the constructor in the initialization list." cwe="398" file0="mbed-dsp/dsp/Sine_f32.cpp">
            <location file="mbed-dsp\dsp\Sine_f32.cpp" line="31"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &amp;#039;_x&amp;#039; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&amp;#039;t explicitly write them to the initialization list. You could avoid assigning &amp;#039;_x&amp;#039; a value by passing the value to the constructor in the initialization list." cwe="398" file0="mbed-dsp/dsp/Sine_f32.cpp">
            <location file="mbed-dsp\dsp\Sine_f32.cpp" line="32"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Sine_f32&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Sine_f32&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="mbed-dsp/dsp/Sine_f32.cpp">
            <location file="mbed-dsp\dsp\Sine_f32.h" line="32"/>
        </error>
    </errors>
</results>
